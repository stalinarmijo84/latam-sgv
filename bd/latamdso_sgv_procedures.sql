-- SCRIPT BD_LATAMDSO_SGV

DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `LOGIN_USUARIO`$$
CREATE PROCEDURE `LOGIN_USUARIO`(
IN XUSUARIO VARCHAR(100),
IN XCLAVE VARCHAR(100)
)
BEGIN
SELECT U.IdUsuario,R.IdRol,R.Descripcion AS 'Rol',U.Usuario,U.Clave,EM.IdEmpresa,EM.Descripcion AS 'Empresa' FROM usuarios U
INNER JOIN roles R ON (U.IdRol=R.IdRol)
INNER JOIN empresas EM ON (U.IdEmpresa=EM.IdEmpresa)
WHERE U.Usuario = XUSUARIO AND U.Clave = XCLAVE AND U.IdEstado=1;
END $$
DELIMITER ;

DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `REGISTRO_USUARIO`$$
CREATE PROCEDURE `REGISTRO_USUARIO`(
IN XIDEMPRESA INT(11),
IN XIDROL INT(11),
IN XUSUARIO VARCHAR(100),
IN XCLAVE VARCHAR (100)
)
BEGIN
INSERT INTO usuarios (IdEmpresa,IdRol,Usuario,Clave)VALUES(XIDEMPRESA,XIDROL,XUSUARIO,XCLAVE);
COMMIT;
END $$
DELIMITER ;

DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `ACTUALIZA_USUARIO`$$
CREATE PROCEDURE `ACTUALIZA_USUARIO`(
IN XIDUSUARIO INT(11),
IN XIDEMPRESA INT(11),
IN XIDROL INT(11),
IN XUSUARIO VARCHAR(100),
IN XCLAVE VARCHAR (100),
IN XIDESTADO INT(11)
)
BEGIN
UPDATE usuarios SET IdEmpresa = XIDEMPRESA,IdRol = XIDROL,Usuario = XUSUARIO,Clave = XCLAVE,IdEstado = XIDESTADO
WHERE IdUsuario = XIDUSUARIO;
COMMIT;
END $$
DELIMITER ;

DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `CONSULTA_USUARIO`$$
CREATE PROCEDURE `CONSULTA_USUARIO`(
)
BEGIN
SELECT U.IdUsuario,EM.Descripcion AS 'Empresa',R.Descripcion AS 'Rol',U.Usuario,U.Clave,ES.Estado
FROM usuarios U
INNER JOIN empresas EM ON (U.IdEmpresa=EM.IdEmpresa)
INNER JOIN roles R ON (U.IdRol=R.IdRol)
INNER JOIN estados ES ON (U.IdEstado=ES.IdEstado);
END $$
DELIMITER ;

DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `LLENA_COMBO_ESTADO`$$
CREATE PROCEDURE `LLENA_COMBO_ESTADO`(
)
BEGIN
SELECT IdEstado,Estado
FROM estados;
END $$
DELIMITER ;

DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `LLENA_COMBO_ROL`$$
CREATE PROCEDURE `LLENA_COMBO_ROL`()
BEGIN
SELECT IdRol,Descripcion FROM roles;
END $$
DELIMITER ;


DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `REGISTRO_EMPRESA`$$
CREATE PROCEDURE `REGISTRO_EMPRESA`(
IN XDESCRIPCION VARCHAR(100),
IN XRUC VARCHAR(100),
IN XDIRECCION VARCHAR(100),
IN XTELEFONO VARCHAR(100),
IN XEMAIL VARCHAR(100)
)
BEGIN
INSERT INTO empresas (Descripcion,Ruc,Direccion,Telefono,Email)
VALUES(XDESCRIPCION,XRUC,XDIRECCION,XTELEFONO,XEMAIL);
COMMIT;
END$$
DELIMITER ;

DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `CONSULTA_EMPRESAS`$$
CREATE PROCEDURE `CONSULTA_EMPRESAS`(
)
BEGIN
SELECT IdEmpresa,Descripcion,Ruc,Direccion,Telefono,Email FROM empresas;
END $$
DELIMITER ;

DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `ACTUALIZA_EMPRESA`$$
CREATE PROCEDURE `ACTUALIZA_EMPRESA`(
IN XIDEMPRESA INT(11),
IN XDESCRIPCION VARCHAR(100),
IN XRUC VARCHAR(100),
IN XDIRECCION VARCHAR(100),
IN XTELEFONO VARCHAR(100),
IN XEMAIL VARCHAR(100)
)
BEGIN
UPDATE empresas SET Descripcion = XDESCRIPCION,Ruc = XRUC,Direccion = XDIRECCION,Telefono = XTELEFONO,Email = XEMAIL 
WHERE IdEmpresa = XIDEMPRESA;
COMMIT;
END$$
DELIMITER ;

DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `LLENA_COMBO_EMPRESA`$$
CREATE PROCEDURE `LLENA_COMBO_EMPRESA`(
)
BEGIN
SELECT IdEmpresa,Descripcion FROM empresas;
END $$
DELIMITER ;
-- LISTO
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `REGISTRO_TERCERO`$$
CREATE PROCEDURE `REGISTRO_TERCERO`
(
IN XIDTIPO INT(11),
IN XNOMBRES VARCHAR(100),
IN XAPELLIDOS VARCHAR(100),
IN XIDENTIFICACION VARCHAR(100),
IN XDIRECCION VARCHAR(100),
IN XTELEFONO VARCHAR(100),
IN XEMAIL VARCHAR(100)
)
BEGIN
INSERT INTO terceros (IdTipo,Nombres,Apellidos,Identificacion,Direccion,Telefono,Email)
VALUES(XIDTIPO,XNOMBRES,XAPELLIDOS,XIDENTIFICACION,XDIRECCION,XTELEFONO,XEMAIL);
COMMIT;
END $$
DELIMITER ;
-- LISTO
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `ACTUALIZA_TERCERO`$$
CREATE PROCEDURE `ACTUALIZA_TERCERO`
(
IN XIDTERCERO INT(11),
IN XIDTIPO INT(11),
IN XNOMBRES VARCHAR(100),
IN XAPELLIDOS VARCHAR(100),
IN XIDENTIFICACION VARCHAR(100),
IN XDIRECCION VARCHAR(100),
IN XTELEFONO VARCHAR(100),
IN XEMAIL VARCHAR(100)
)
BEGIN
UPDATE terceros SET IdTipo =  XIDTIPO,Nombres = XNOMBRES,Apellidos = XAPELLIDOS,Identificacion = XIDENTIFICACION,
Direccion = XDIRECCION,Telefono = XTELEFONO,Email = XEMAIL
WHERE IdTercero = XIDTERCERO;
COMMIT;
END $$
DELIMITER ;
-- LISTO
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `CONSULTA_TERCERO`$$
CREATE PROCEDURE `CONSULTA_TERCERO`()
BEGIN
SELECT T.IdTercero,TT.Tercero,T.Nombres,T.Apellidos,T.Identificacion,T.Direccion,T.Telefono,T.Email 
FROM terceros T
INNER JOIN tipo_tro TT ON (T.IdTipo=TT.IdTipo);
END $$
DELIMITER ;
-- listo 
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `LLENA_COMBO_TERCERO`$$
CREATE PROCEDURE `LLENA_COMBO_TERCERO`(
)
BEGIN
SELECT IdTercero,CONCAT(Nombres,' ',Apellidos) AS 'Tercero' FROM terceros;
END $$
DELIMITER ;

-- listo 
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `LLENA_COMBO_TIPO_TERCERO`$$
CREATE PROCEDURE `LLENA_COMBO_TIPO_TERCERO`(
)
BEGIN
SELECT IdTipo,Tercero FROM tipo_tro;
END $$
DELIMITER ;

-- LISTO-up
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `REGISTRO_CATEGORIA`$$
CREATE PROCEDURE `REGISTRO_CATEGORIA`
(
IN XIDEMPRESA INT(11),
IN XDESCRIPCION VARCHAR(100)
)
BEGIN
INSERT INTO categorias (IdEmpresa,Descripcion)
VALUES(XIDEMPRESA,XDESCRIPCION);
COMMIT;
END $$
DELIMITER ;

-- LISTO-up
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `CONSULTA_CATEGORIA_ADMINISTRADOR`$$
CREATE PROCEDURE `CONSULTA_CATEGORIA_ADMINISTRADOR`
()
BEGIN
SELECT C.IdCategoria,E.Descripcion AS 'Empresa',C.Descripcion
FROM categorias C
INNER JOIN empresas E ON (C.IdEmpresa=E.IdEmpresa);
END $$
DELIMITER ;

-- LISTO-up
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `CONSULTA_CATEGORIA_USUARIO`$$
CREATE PROCEDURE `CONSULTA_CATEGORIA_USUARIO`
(
IN XIDEMPRESA INT(11)
)
BEGIN
SELECT IdCategoria,Descripcion FROM categorias
WHERE IdEmpresa=XIDEMPRESA;
END $$
DELIMITER ;

-- LISTO-up
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `ACTUALIZA_CATEGORIA`$$
CREATE PROCEDURE `ACTUALIZA_CATEGORIA`
(
IN XIDCATEGORIA INT(11),
IN XIDEMPRESA INT(11),
IN XDESCRIPCION VARCHAR(100)
)
BEGIN
UPDATE categorias SET IdEmpresa = XIDEMPRESA,Descripcion = XDESCRIPCION
WHERE IdCategoria = XIDCATEGORIA;
COMMIT;
END $$
DELIMITER ;

-- Listo
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `REGISTRO_DIARIO`$$
CREATE PROCEDURE `REGISTRO_DIARIO`(
IN XIDUSUARIO INT(11),
IN XIDEMPRESA INT(11),
IN XIDTIPO INT(11),
IN XIDCATEGORIA INT(11),
IN XIDTERCERO INT(11),
IN XFECHA DATE,
IN XDETALLE VARCHAR(1000),
IN XINGRESO DOUBLE(12,2),
IN XEGRESO DOUBLE(12,2)
)
BEGIN
DECLARE XFECHAREG DATETIME;
SELECT NOW() INTO XFECHAREG;
INSERT INTO diarios (IdUsuario,IdEmpresa,IdTipoDiario,IdCategoria,IdTercero,Fecha,Detalle,Ingreso,Egreso,FechaReg)
VALUES(XIDUSUARIO,XIDEMPRESA,XIDTIPO,XIDCATEGORIA,XIDTERCERO,XFECHA,XDETALLE,XINGRESO,XEGRESO,XFECHAREG);
COMMIT;
END$$
DELIMITER ;
-- Listo
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `ACTUALIZA_DIARIO`$$
CREATE PROCEDURE `ACTUALIZA_DIARIO`(
IN XIDDIARIO INT(11),
IN XIDUSUARIO INT(11),
IN XIDEMPRESA INT(11),
IN XIDTIPO INT(11),
IN XIDCATEGORIA INT(11),
IN XIDTERCERO INT(11),
IN XFECHA DATE,
IN XDETALLE VARCHAR(1000),
IN XINGRESO DOUBLE(12,2),
IN XEGRESO DOUBLE(12,2)
)
BEGIN
DECLARE XFECHA_AT DATETIME;
SELECT NOW() INTO XFECHA_AT;
UPDATE diarios SET IdUsuario = XIDUSUARIO,IdEmpresa = XIDEMPRESA,IdTipoDiario = XIDTIPO,IdCategoria = XIDCATEGORIA,
IdTercero = XIDTERCERO,Fecha = XFECHA,Detalle = XDETALLE,Ingreso = XINGRESO,Egreso = XEGRESO,FechaAt = XFECHA_AT
WHERE IdDiario = XIDDIARIO;
COMMIT;
END$$
DELIMITER ;

-- Listo
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `ELIMINA_DIARIO`$$
CREATE PROCEDURE `ELIMINA_DIARIO`(
IN XIDDIARIO INT(11)
)
BEGIN
DECLARE XFECHA_AT DATETIME;
SELECT NOW() INTO XFECHA_AT;
UPDATE diarios SET IdEstado = 0,FechaAt = XFECHA_AT
WHERE IdDiario = XIDDIARIO;
COMMIT;
END$$
DELIMITER ;

-- Listo
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `CONSULTA_DIARIO_ADMINISTRADOR`$$
CREATE PROCEDURE `CONSULTA_DIARIO_ADMINISTRADOR`(
)
BEGIN
SELECT D.IdDiario,T.Descripcion AS 'Tipo',C.Descripcion AS 'Motivo',D.Fecha,D.Detalle,D.Ingreso,D.Egreso,E.Estado FROM diarios D
INNER JOIN tipo_diario T ON (D.IdTipoDiario=T.IdTipoDiario)
INNER JOIN categorias C ON (D.IdCategoria=C.IdCategoria)
INNER JOIN estados E ON (D.IdEstado=E.IdEstado)
WHERE D.IdEstado = 1;
END$$
DELIMITER ;

-- Listo
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `CONSULTA_DIARIO_USUARIO`$$
CREATE PROCEDURE `CONSULTA_DIARIO_USUARIO`(
IN XIDEMPRESA INT(11)
)
BEGIN
SELECT D.IdDiario,T.Descripcion AS 'Tipo',C.Descripcion AS 'Motivo',D.Fecha,D.Detalle,D.Ingreso,D.Egreso,E.Estado FROM diarios D
INNER JOIN tipo_diario T ON (D.IdTipoDiario=T.IdTipoDiario)
INNER JOIN categorias C ON (D.IdCategoria=C.IdCategoria)
INNER JOIN estados E ON (D.IdEstado=E.IdEstado)
WHERE D.IdEmpresa = XIDEMPRESA AND D.IdEstado = 1;
END$$
DELIMITER ;

-- Listo
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `CONSULTA_REPORTE_DIARIO`$$
CREATE PROCEDURE `CONSULTA_REPORTE_DIARIO`(
)
BEGIN
SELECT D.IdDiario,U.Usuario,EM.Descripcion AS 'Empresa',T.Descripcion AS 'Tipo',C.Descripcion AS 'Motivo',CONCAT(TC.Nombres,' ',TC.Apellidos)AS 'Tercero',D.Fecha,D.Detalle,D.Ingreso,D.Egreso,D.FechaReg 
FROM diarios D
INNER JOIN usuarios U ON (D.IdUsuario=U.IdUsuario)
INNER JOIN empresas EM ON (D.IdEmpresa=EM.IdEmpresa)
INNER JOIN tipo_diario T ON (D.IdTipoDiario=T.IdTipoDiario)
INNER JOIN categorias C ON (D.IdCategoria=C.IdCategoria)
INNER JOIN terceros TC ON (D.IdTercero=TC.IdTercero)
INNER JOIN estados E ON (D.IdEstado=E.IdEstado)
WHERE D.IdEstado=1 ORDER BY D.IdDiario ASC;
END$$
DELIMITER ;
-- Listo

DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `REPORTE_DIARIO`$$
CREATE PROCEDURE `REPORTE_DIARIO`(
IN XIDEMPRESA INT(11),
IN XFDESDE DATE,
IN XFHASTA DATE
)
BEGIN
SELECT D.IdDiario,U.Usuario,EM.Descripcion AS 'Empresa',T.Descripcion AS 'Tipo',C.Descripcion AS 'Motivo',CONCAT(TC.Nombres,' ',TC.Apellidos)AS 'Tercero',D.Fecha,D.Detalle,D.Ingreso,D.Egreso,D.FechaReg 
FROM latamdso_sgv D
INNER JOIN usuarios U ON (D.IdUsuario=U.IdUsuario)
INNER JOIN empresas EM ON (D.IdEmpresa=EM.IdEmpresa)
INNER JOIN tipo_diario T ON (D.IdTipoDiario=T.IdTipoDiario)
INNER JOIN categorias C ON (D.IdCategoria=C.IdCategoria)
INNER JOIN terceros TC ON (D.IdTercero=TC.IdTercero)
INNER JOIN estados E ON (D.IdEstado=E.IdEstado)
WHERE EM.IdEmpresa = XIDEMPRESA AND D.Fecha BETWEEN XFDESDE AND XFHASTA AND D.IdEstado=1 ORDER BY D.IdDiario ASC;
END$$
DELIMITER ;

-- listo 
DELIMITER $$
USE `latamdso_sgv`$$
DROP PROCEDURE IF EXISTS `LLENA_COMBO_TIPO`$$
CREATE PROCEDURE `LLENA_COMBO_TIPO`(
)
BEGIN
SELECT IdTipoDiario,Descripcion FROM tipo_diario;
END $$
DELIMITER ;

